//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CaptchaVpap
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Captcha", Namespace="http://schemas.datacontract.org/2004/07/SuperCapcha")]
    public partial class Captcha : object
    {
        
        private string ValorCaptchaField;
        
        private byte[] imagenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValorCaptcha
        {
            get
            {
                return this.ValorCaptchaField;
            }
            set
            {
                this.ValorCaptchaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] imagen
        {
            get
            {
                return this.imagenField;
            }
            set
            {
                this.imagenField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CaptchaVpap.ISupercatch")]
    public interface ISupercatch
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupercatch/GetData", ReplyAction="http://tempuri.org/ISupercatch/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        // CODEGEN: Generando contrato de mensaje, ya que la operación tiene múltiples valores devueltos.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupercatch/GetCaptcha", ReplyAction="http://tempuri.org/ISupercatch/GetCaptchaResponse")]
        System.Threading.Tasks.Task<CaptchaVpap.GetCaptchaResponse> GetCaptchaAsync(CaptchaVpap.GetCaptchaRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCaptcha", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCaptchaRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetCaptchaRequest()
        {
        }
        
        public GetCaptchaRequest(string sender, string sError)
        {
            this.sender = sender;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCaptchaResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCaptchaResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public CaptchaVpap.Captcha GetCaptchaResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetCaptchaResponse()
        {
        }
        
        public GetCaptchaResponse(CaptchaVpap.Captcha GetCaptchaResult, string sError)
        {
            this.GetCaptchaResult = GetCaptchaResult;
            this.sError = sError;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface ISupercatchChannel : CaptchaVpap.ISupercatch, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class SupercatchClient : System.ServiceModel.ClientBase<CaptchaVpap.ISupercatch>, CaptchaVpap.ISupercatch
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SupercatchClient() : 
                base(SupercatchClient.GetDefaultBinding(), SupercatchClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISupercatch.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupercatchClient(EndpointConfiguration endpointConfiguration) : 
                base(SupercatchClient.GetBindingForEndpoint(endpointConfiguration), SupercatchClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupercatchClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SupercatchClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupercatchClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SupercatchClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupercatchClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value)
        {
            return base.Channel.GetDataAsync(value);
        }
        
        public System.Threading.Tasks.Task<CaptchaVpap.GetCaptchaResponse> GetCaptchaAsync(CaptchaVpap.GetCaptchaRequest request)
        {
            return base.Channel.GetCaptchaAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISupercatch))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISupercatch))
            {
                return new System.ServiceModel.EndpointAddress("http://evolution02.nh.inet/WS_Captcha/SuperCapcha.CaptchaEt.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SupercatchClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISupercatch);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SupercatchClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISupercatch);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISupercatch,
        }
    }
}
